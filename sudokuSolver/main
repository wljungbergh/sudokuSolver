#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Apr 27 15:27:46 2019

@author: william
"""

import math
import numpy as np
from PIL import Image, ImageDraw

def create_sudoku():
    img = Image.new('RGB',(300,300),color='white')
    size = img.size[0]
    drawImg = ImageDraw.Draw(img)
    for i in range(1,10):
        if i%3 == 0:
            lineWidth = 3
        else:
            lineWidth = 1
        drawImg.line((i*size/9,0, i*size/9,300), fill='black',width = lineWidth)
        drawImg.line((0,i*size/9, 300, i*size/9), fill='black',width = lineWidth)
    return img

def fill_sudoku(img,sudokuArray):    
    drawImg = ImageDraw.Draw(img)
    size = img.size[0]/9
    for i in range(sudokuArray.shape[0]):
        for j in range(sudokuArray.shape[1]):
            xCoord = i * size + size/2
            yCoord = j * size + size/2
            number = sudokuArray[j][i]
            if number != None:
                drawImg.text((xCoord,yCoord) ,str(number), fill = 'black')
def merge_img(img1, img2):
    im  = Image.new('RGB',(630,300))
    im.paste(img1, (0,0))
    im.paste(img2, (330,0))
    
    im.show()
    
start = create_sudoku()
fill_sudoku(start, trainingSudoku)

sol = create_sudoku()
fill_sudoku(sol,trainingSudokuSolution)

merge_img(start,sol)

def create_grid(sudokuArray):
    cellArray = []
    sectionNumbers = [ [] for t in range(9)]
    for i in range(sudokuArray.shape[0]):
        cellArray.append([])
        for j in range(sudokuArray.shape[1]):
            cellArray[i].append(Cell(i,j))
        if sudokuArray[i][j] != None:
            cellArray[i][j].assignNumber(sudokuArray[i][j],sectionNumbers)
            
    return cellArray,sectionNumbers

x, y = create_grid(trainingSudoku)







#print(x[0][0].possibleNumbers)
#print('finished') 
#print(y[2])
#print('..........')
#a = 0
#while all(len(s) != 9 for s in y):
#    a += 1
#    print('lap {}...............................'.format(a))
#    for i in range(9):
#        for j in range(9):
#            print('pre assigned number: ' + str(x[i][j].assignedNumber))
#            print('pre possible number: ' + str(x[i][j].possibleNumbers))
#            if x[i][j].assignedNumber == None:
#                x[i][j].updatePossibleNumbers(trainingSudoku,y)
#            print('assigned number: ' + str(x[i][j].assignedNumber))
#            print('possible number: ' + str(x[i][j].possibleNumbers))
#            print('................')
#            print(a)
#    if a > 100:
#        print('iteration100')
#        breakâ€‹
